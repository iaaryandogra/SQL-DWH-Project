CREATE DEFINER=`root`@`localhost` PROCEDURE `silver_load_silver`()
BEGIN

-- Step 1: Truncate and load cleaned customer data into silver.crm_cust_info
TRUNCATE TABLE silver.crm_cust_info;

INSERT INTO silver.crm_cust_info (
  cst_id,
  cst_key,
  cst_firstname,
  cst_lastname,
  cst_marital_status,
  cst_gndr,
  cst_create_date
)
SELECT 
  cst_id,
  cst_key,
  TRIM(cst_firstname),
  TRIM(cst_lastname),
  CASE 
    WHEN cst_marital_status = 'M' THEN 'MARRIED'
    WHEN cst_marital_status = 'S' THEN 'SINGLE'
    ELSE 'n/a'
  END,
  CASE 
    WHEN cst_gndr = 'F' THEN 'FEMALE'
    WHEN cst_gndr = 'M' THEN 'MALE'
    ELSE 'n/a'
  END,
  cst_create_date
FROM (
  SELECT *,
         ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag_last
  FROM bronze.crm_cust_info
) AS t
WHERE flag_last = 1 AND cst_id IS NOT NULL;

-- Step 2: Truncate and load cleaned product data into silver.crm_prd_info
TRUNCATE TABLE silver.crm_prd_info;

INSERT INTO silver.crm_prd_info (
  prd_id,
  cat_id,
  prd_key,
  prd_nm,
  prd_cost,
  prd_line,
  prd_start_dt,
  prd_end_dt
)
SELECT
  prd_id,
  REPLACE(SUBSTRING(prd_key, 1, 5), '-', '_'),
  SUBSTRING(prd_key, 7),
  prd_nm,
  IFNULL(prd_cost, 0),
  CASE 
    WHEN UPPER(TRIM(prd_line)) = 'M' THEN 'Mountain'
    WHEN UPPER(TRIM(prd_line)) = 'R' THEN 'Roads'
    WHEN UPPER(TRIM(prd_line)) = 'T' THEN 'Touring'
    WHEN UPPER(TRIM(prd_line)) = 'S' THEN 'Other Sales'
    ELSE 'n/a'
  END,
  CAST(prd_start_dt AS DATE),
  CAST(prd_end_dt AS DATE)
FROM bronze.crm_prd_info;

-- Step 3: Truncate and load corrected sales data into silver.crm_sales_details
TRUNCATE TABLE silver.crm_sales_details;

INSERT INTO silver.crm_sales_details (
  sls_ord_num,
  sls_prd_key,
  sls_cust_id,
  sls_order_dt,
  sls_ship_dt,
  sls_due_dt,
  sls_sales,
  sls_quantity,
  sls_price
)
SELECT 
  sls_ord_num,
  sls_prd_key,
  sls_cust_id,
  CASE 
    WHEN sls_order_dt = 0 OR LENGTH(sls_order_dt) != 8 THEN NULL
    ELSE STR_TO_DATE(CAST(sls_order_dt AS CHAR), '%Y%m%d')
  END,
  CASE 
    WHEN sls_ship_dt = 0 OR LENGTH(sls_ship_dt) != 8 THEN NULL
    ELSE STR_TO_DATE(CAST(sls_ship_dt AS CHAR), '%Y%m%d')
  END,
  CASE 
    WHEN sls_due_dt = 0 OR LENGTH(sls_due_dt) != 8 THEN NULL
    ELSE STR_TO_DATE(CAST(sls_due_dt AS CHAR), '%Y%m%d')
  END,
  CASE 
    WHEN sls_sales IS NULL 
         OR sls_sales <= 0 
         OR sls_sales != ABS(IFNULL(sls_price, 0)) * IFNULL(sls_quantity, 0)
    THEN ABS(IFNULL(sls_price, 0)) * IFNULL(sls_quantity, 0)
    ELSE sls_sales
  END,
  sls_quantity,
  CASE 
    WHEN sls_price IS NULL OR sls_price <= 0
    THEN sls_sales / NULLIF(sls_quantity, 0)
    ELSE sls_price
  END
FROM bronze.crm_sales_details;

-- Step 4: Truncate and load cleaned ERP customer data into silver.erp_cust_az12
TRUNCATE TABLE silver.erp_cust_az12;

INSERT INTO silver.erp_cust_az12 (
  cid,
  bdate,
  gen
)
SELECT 
  CASE 
    WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid, 4)
    ELSE cid
  END,
  CASE 
    WHEN bdate > CURRENT_TIMESTAMP() THEN NULL
    ELSE bdate
  END,
  CASE 
    WHEN UPPER(TRIM(gen)) IN ('F', 'FEMALE') THEN 'Female'
    WHEN UPPER(TRIM(gen)) IN ('M', 'MALE') THEN 'Male'
    ELSE 'n/a'
  END
FROM bronze.erp_cust_az12
WHERE 
  CASE 
    WHEN cid LIKE 'NAS%' THEN SUBSTRING(cid, 4)
    ELSE cid
  END NOT IN (
    SELECT DISTINCT cst_key FROM silver.crm_cust_info
  );

-- Step 5: Truncate and load cleaned ERP location data into silver.erp_loca_101
TRUNCATE TABLE silver.erp_loca_101;

INSERT INTO silver.erp_loca_101 (
  cid,
  cntry
)
SELECT 
  REPLACE(cid, '-', ''),
  CASE 
    WHEN TRIM(cntry) = 'DE' THEN 'Germany'
    WHEN TRIM(cntry) IN ('US', 'USA') THEN 'United States'
    WHEN TRIM(cntry) = '' OR cntry IS NULL THEN 'n/a'
    ELSE TRIM(cntry)
  END
FROM bronze.erp_loca_101;

-- Step 6: Truncate and load ERP category data into silver.erp_px_cat_g1v2
TRUNCATE TABLE silver.erp_px_cat_g1v2;

INSERT INTO silver.erp_px_cat_g1v2 (
  id,
  cat,
  subcat,
  maintenance,
  dwh_create_date
)
SELECT
  id,
  cat,
  subcat,
  maintenance,
  CURRENT_TIMESTAMP()
FROM bronze.erp_px_cat_g1v2;

END
